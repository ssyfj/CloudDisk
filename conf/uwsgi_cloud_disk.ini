# uwsgi_cloud_disk.ini file
[uwsgi]

# Django-related settings
# the base directory (full path)
# 指定运行目录，其实就是项目的根目录
chdir = /home/njzy/Django/CloudDisk

# Django's wsgi file
# 导入django项目的wsgi模块
module = CloudDisk.wsgi:application

# 载入wsgi-file
wsgi-file = /home/njzy/Django/CloudDisk/CloudDisk/wsgi.py

# 补充，uwsgi启动时的用户和用户组,注意要按你自己的实际权限进行配置
# 我这边是因为项目属主是njzy，并且把nginx工作进程属组user修改为njzy
uid = njzy
gid = njzy

# process-related settings
# 开启master主进程
master = true 

# maximum number of worker processes
# 开启多少个进程数，workers项也等同processes
# threads项则是设置运行线程，测试倒不用设置上线程
processes = 4

# the socket (use the full path to be safe)
# 设置使用的socket端口或socket地址
# socket = 0.0.0.0:8000
# 上面的socket建议配置成一个clouddisk.sock文件后使用nginx来连接uWSGI运行,不然容易报socket的请求头错误和权限错误等。
socket = /home/njzy/Django/CloudDisk/clouddisk.sock
# ... with appropriate permissions - may be needed
# 配置生成的sock文件的权限
chmod-socket = 664 

# clear environment on exit
＃ 退出时清空环境，其实就是将自动生成的clouddisk.sock和相关pid文件给干掉。
vacuum = true


# set an environment variable
# 设置变量环境，其实就是应用上django项目中的settings
env = DJANGO_SETTINGS_MODULE=CloudDisk.settings

# create a pidfile
# 创建pid文件，注意权限，所以一般放置在tmp目录下
pidfile = /tmp/project-master.pid 

# background the process & log
# 后台运行，有用，基本都会设置上，同时还会输出日志
daemonize = /home/njzy/Django/log/uwsgi/CloudDisk.log 

# 以固定的文件大小（单位kb），进行切割日志
# 下例为50M大小一个日志文件
log-maxsize = 50000000

# 不记录请求信息的日志。只记录错误以及uWSGI内部消息到日志中。
disable-logging = true
#
# 在指定的地址上，开启状态服务。应该就是你访问该地址，就能看到整个uwsgi
#的状态，类似nginx也有。所以一般会只在环回地址上开放。
stats = 127.0.0.1:8081

# 以下都是一些性能和资源上的限制和调配
# respawn processes taking more than 20 seconds
harakiri = 20 
# limit the project to 128 MB
# 控制进程的总内存量,太小会出错
limit-as = 1024 
# respawn processes after serving 5000 requests
max-requests = 5000 
